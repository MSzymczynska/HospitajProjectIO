/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;

import projekt.DataBaseConnection;
import projekt.DateConverter;
import projekt.Reservation;


/**
 *
 * @author Diego
 */
public class HospitalRoomSchedule extends javax.swing.JInternalFrame {

    /**
     * Creates new form HospitalRoomSchedule
     */
    DateConverter d = new DateConverter();
    public HospitalRoomSchedule() {
        initComponents();
        
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(d.zwrocModelLat(20)));
        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(d.zwrocModelNr()));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox7 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        jLabel4.setText("data:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec", "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień", " " }));
        jComboBox1.setToolTipText("Wybierz miesiąc");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${miesiac}"), jComboBox1, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.setToolTipText("Wybierz dzień");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${dzien}"), jComboBox2, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.setToolTipText("Wybierz rok");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${rok}"), jComboBox3, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox7.setToolTipText("Wybierz godzine");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${nr}"), jComboBox7, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox7ActionPerformed(evt);
            }
        });

        jLabel1.setText("room number:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${reList}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${stringh_from}"));
        columnBinding.setColumnName("Stringh_from");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nameOfService}"));
        columnBinding.setColumnName("Name Of Service");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${room_id}"));
        columnBinding.setColumnName("Room_id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${staff}"));
        columnBinding.setColumnName("Staff");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${patient_id}"));
        columnBinding.setColumnName("Patient_id");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${reserv_id}"));
        columnBinding.setColumnName("Reserv_id");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Ni", "Pn", "Wt", "Śr", "Cz", "Pt", "So"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
            jTable2.getColumnModel().getColumn(6).setResizable(false);
        }

        jButton3.setText("Calendar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        setMiesiac((String) jComboBox1.getSelectedItem());
        miesiac = (String) jComboBox1.getSelectedItem();
        if (miesiac == "Styczeń" || miesiac == "Marzec" || miesiac == "Maj" || miesiac == "Lipiec" || miesiac == "Sierpień" || miesiac == "Październik" || miesiac == "Grudzień") {
            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(d.zwrocModelDni(31)));
        } else if (miesiac == "Kwiecień" || miesiac == "Czerwiec" || miesiac == "Wrzesień" || miesiac == "Listopad") {
            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(d.zwrocModelDni(30)));
        } else if (miesiac == "Luty") {
            jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(d.zwrocModelDni(28)));
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        setDzien((String) jComboBox2.getSelectedItem());
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        setRok((String) jComboBox3.getSelectedItem());
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox7ActionPerformed
        setNr((int) jComboBox7.getSelectedItem());
    }//GEN-LAST:event_jComboBox7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

       try {
            DataBaseConnection d = new DataBaseConnection();
            ReList = d.getRoomServices(nr,rok,miesiac,dzien);
        } catch (Exception ex) {
            Logger.getLogger(SighPatient.class.getName()).log(Level.SEVERE, null, ex);
        }              
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        for(int k = 0; k < jTable2.getRowCount(); k++){
           for(int l = 0; l < jTable2.getColumnCount(); l++){
               jTable2.setValueAt(" ", k, l);
           }
       }
        
        day = new GregorianCalendar( convertYearToNumber((String) jComboBox3.getSelectedItem()), convertMonthToNumber((String) jComboBox1.getSelectedItem()), 1);
       
       int today = day.get(Calendar.DAY_OF_MONTH);
       int month = day.get(Calendar.MONTH);
 
       int dayOfWeek = day.get(Calendar.DAY_OF_WEEK);
       int i = dayOfWeek - 1;
       int j = 0;
       boolean flag = true;
       
       do
       {  
          int dzien = day.get(Calendar.DAY_OF_MONTH);
          jTable2.setValueAt(dzien, j, i);
          flag = true;
          
          if (dayOfWeek == Calendar.SATURDAY){
              j++;
              i=0;
              flag = false;
          }
 
          day.add(Calendar.DAY_OF_MONTH, 1);
          dayOfWeek = day.get(Calendar.DAY_OF_WEEK);
          if(flag){
              i++;
          }
       } 
       while (day.get(Calendar.MONTH) == month);
        
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
   
    
    private String rok = "2015";
    private String miesiac = "Luty";
    private String dzien = "01";
    private int nr=1;

    public static final String PROP_NR = "nr";
    public static final String PROP_DZIEN = "dzien";
    public static final String PROP_MIESIAC = "miesiac";
    public static final String PROP_ROK = "rok";
    public static final String PROP_DOCZYSZCZENIA = "doCzyszczenia";
    
       
    
    public int getNr() {
        return nr;
    }

    public void setNr(int nr) {
        int oldNr = this.nr;
        this.nr = nr;
        firePropertyChange(PROP_NR, oldNr, nr);
    }
    
    
    public String getDzien() {
        return dzien;
    }


    public void setDzien(String dzien) {
        String oldDzien = this.dzien;
        this.dzien = dzien;
        firePropertyChange(PROP_DZIEN, oldDzien, dzien);
    }


    public String getMiesiac() {
        return miesiac;
    }


    public void setMiesiac(String miesiac) {
        String oldMiesiac = this.miesiac;
        this.miesiac = miesiac;
        firePropertyChange(PROP_MIESIAC, oldMiesiac, miesiac);
    }


    public String getRok() {
        return rok;
    }


    public void setRok(String rok) {
        String oldRok = this.rok;
        this.rok = rok;
        firePropertyChange(PROP_ROK, oldRok, rok);
    }
    
    private GregorianCalendar day;

    private Integer convertMonthToNumber(String month) {
        if ("Styczeń".equals(month)) {
            return 0;
        }
        if ("Luty".equals(month)) {
            return 1;
        }
        if ("Marzec".equals(month)) {
            return 2;
        }
        if ("Kwiecień".equals(month)) {
            return 3;
        }
        if ("Maj".equals(month)) {
            return 4;
        }
        if ("Czerwiec".equals(month)) {
            return 5;
        }
        if ("Lipiec".equals(month)) {
            return 6;
        }
        if ("Sierpień".equals(month)) {
            return 7;
        }
        if ("Wrzesień".equals(month)) {
            return 8;
        }
        if ("Październik".equals(month)) {
            return 9;
        }
        if ("Listopad".equals(month)) {
            return 10;
        }
        if ("Grudzień".equals(month)) {
            return 11;
        } else {
            return -1;
        }
    }
    private Integer convertYearToNumber(String year) {
        if ("2015".equals(year)) {
            return 2015;
        }
        if ("2016".equals(year)) {
            return 2016;
        }
        if ("2017".equals(year)) {
            return 2017;
        }
        if ("2018".equals(year)) {
            return 2018;
        }
        if ("2019".equals(year)) {
            return 2019;
        }
        if ("2020".equals(year)) {
            return 2020;
        }
        if ("2021".equals(year)) {
            return 2021;
        }
        if ("2022".equals(year)) {
            return 2022;
        }
        if ("2023".equals(year)) {
            return 2023;
        }
        if ("2024".equals(year)) {
            return 2024;
        }
        if ("2025".equals(year)) {
            return 2025;
        }
        if ("2026".equals(year)) {
            return 2026;
        }
        if ("2027".equals(year)) {
            return 2027;
        }
        if ("2028".equals(year)) {
            return 2028;
        }
        if ("2029".equals(year)) {
            return 2029;
        }
        if ("2030".equals(year)) {
            return 2030;
        }
        else {
            return -1;
        }
    }


    
    private org.jdesktop.observablecollections.ObservableList<Reservation> ReList = ObservableCollections.observableList(new ArrayList<Reservation>());

    public ObservableList<Reservation> getReList() {
        return ReList;
    }

    public void setReList(ObservableList<Reservation> reList) {
        this.ReList = reList;
    }
    
}
